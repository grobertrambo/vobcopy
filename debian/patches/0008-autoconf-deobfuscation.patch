From: "Barak A. Pearlmutter" <barak+git@cs.nuim.ie>
Date: Thu, 26 Jan 2012 17:19:19 +0000
Subject: autoconf deobfuscation

remove system-specific guards in favour of feature tests.
test for getopt_long.
test for fdatasync.
test for statfs and friends.
remove gettext.h.
---
 configure.ac |   4 +-
 gettext.h    | 280 -----------------------------------------------------------
 vobcopy.c    |   7 --
 vobcopy.h    | 159 +++++++++------------------------
 4 files changed, 44 insertions(+), 406 deletions(-)
 delete mode 100644 gettext.h

diff --git a/configure.ac b/configure.ac
index 62c8773..4539a98 100644
--- a/configure.ac
+++ b/configure.ac
@@ -22,7 +22,7 @@ AC_PROG_LN_S
 AC_CHECK_LIB([dvdread], [DVDOpen])
 
 # Checks for header files.
-AC_CHECK_HEADERS([fcntl.h libintl.h locale.h mntent.h stdint.h stdlib.h string.h sys/ioctl.h sys/mount.h sys/param.h sys/statfs.h sys/statvfs.h sys/vfs.h termios.h unistd.h])
+AC_CHECK_HEADERS([fcntl.h libintl.h locale.h mntent.h stdint.h stdlib.h string.h sys/ioctl.h sys/mount.h sys/param.h sys/statfs.h sys/statvfs.h sys/vfs.h termios.h unistd.h getopt.h sys/mnttab.h assert.h dirent.h])
 
 # Checks for typedefs, structures, and compiler characteristics.
 AC_HEADER_STDBOOL
@@ -35,7 +35,7 @@ AC_FUNC_FSEEKO
 AC_SYS_LARGEFILE
 AC_FUNC_GETMNTENT
 AC_FUNC_MALLOC
-AC_CHECK_FUNCS([alarm fdatasync getcwd getmntent getmntinfo memset mkdir setlocale strcasecmp strerror strpbrk strstr])
+AC_CHECK_FUNCS([alarm fdatasync getcwd getmntent getmntinfo memset mkdir setlocale strcasecmp strerror strpbrk strstr getopt_long])
 
 # trailer
 AC_CONFIG_FILES([Makefile po/Makefile.in])
diff --git a/gettext.h b/gettext.h
deleted file mode 100644
index e76b592..0000000
--- a/gettext.h
+++ /dev/null
@@ -1,280 +0,0 @@
-/* Convenience header for conditional use of GNU <libintl.h>.
-   Copyright (C) 1995-1998, 2000-2002, 2004-2006, 2009 Free Software Foundation, Inc.
-
-   This program is free software; you can redistribute it and/or modify it
-   under the terms of the GNU General Public License as published
-   by the Free Software Foundation; either version 3, or (at your option)
-   any later version.
-
-   This program is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Library General Public License for more details.
-
-   You should have received a copy of the GNU General Public
-   License along with this program; if not, write to the Free Software
-   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
-   USA.  */
-
-#ifndef _LIBGETTEXT_H
-#define _LIBGETTEXT_H 1
-
-/* NLS can be disabled through the configure --disable-nls option.  */
-#if ENABLE_NLS
-
-/* Get declarations of GNU message catalog functions.  */
-# include <libintl.h>
-
-/* You can set the DEFAULT_TEXT_DOMAIN macro to specify the domain used by
-   the gettext() and ngettext() macros.  This is an alternative to calling
-   textdomain(), and is useful for libraries.  */
-# ifdef DEFAULT_TEXT_DOMAIN
-#  undef gettext
-#  define gettext(Msgid) \
-     dgettext (DEFAULT_TEXT_DOMAIN, Msgid)
-#  undef ngettext
-#  define ngettext(Msgid1, Msgid2, N) \
-     dngettext (DEFAULT_TEXT_DOMAIN, Msgid1, Msgid2, N)
-# endif
-
-#else
-
-/* Solaris /usr/include/locale.h includes /usr/include/libintl.h, which
-   chokes if dcgettext is defined as a macro.  So include it now, to make
-   later inclusions of <locale.h> a NOP.  We don't include <libintl.h>
-   as well because people using "gettext.h" will not include <libintl.h>,
-   and also including <libintl.h> would fail on SunOS 4, whereas <locale.h>
-   is OK.  */
-#if defined(__sun)
-# include <locale.h>
-#endif
-
-/* Many header files from the libstdc++ coming with g++ 3.3 or newer include
-   <libintl.h>, which chokes if dcgettext is defined as a macro.  So include
-   it now, to make later inclusions of <libintl.h> a NOP.  */
-#if defined(__cplusplus) && defined(__GNUG__) && (__GNUC__ >= 3)
-# include <cstdlib>
-# if (__GLIBC__ >= 2) || _GLIBCXX_HAVE_LIBINTL_H
-#  include <libintl.h>
-# endif
-#endif
-
-/* Disabled NLS.
-   The casts to 'const char *' serve the purpose of producing warnings
-   for invalid uses of the value returned from these functions.
-   On pre-ANSI systems without 'const', the config.h file is supposed to
-   contain "#define const".  */
-# undef gettext
-# define gettext(Msgid) ((const char *) (Msgid))
-# undef dgettext
-# define dgettext(Domainname, Msgid) ((void) (Domainname), gettext (Msgid))
-# undef dcgettext
-# define dcgettext(Domainname, Msgid, Category) \
-    ((void) (Category), dgettext (Domainname, Msgid))
-# undef ngettext
-# define ngettext(Msgid1, Msgid2, N) \
-    ((N) == 1 \
-     ? ((void) (Msgid2), (const char *) (Msgid1)) \
-     : ((void) (Msgid1), (const char *) (Msgid2)))
-# undef dngettext
-# define dngettext(Domainname, Msgid1, Msgid2, N) \
-    ((void) (Domainname), ngettext (Msgid1, Msgid2, N))
-# undef dcngettext
-# define dcngettext(Domainname, Msgid1, Msgid2, N, Category) \
-    ((void) (Category), dngettext(Domainname, Msgid1, Msgid2, N))
-# undef textdomain
-# define textdomain(Domainname) ((const char *) (Domainname))
-# undef bindtextdomain
-# define bindtextdomain(Domainname, Dirname) \
-    ((void) (Domainname), (const char *) (Dirname))
-# undef bind_textdomain_codeset
-# define bind_textdomain_codeset(Domainname, Codeset) \
-    ((void) (Domainname), (const char *) (Codeset))
-
-#endif
-
-/* A pseudo function call that serves as a marker for the automated
-   extraction of messages, but does not call gettext().  The run-time
-   translation is done at a different place in the code.
-   The argument, String, should be a literal string.  Concatenated strings
-   and other string expressions won't work.
-   The macro's expansion is not parenthesized, so that it is suitable as
-   initializer for static 'char[]' or 'const char[]' variables.  */
-#define gettext_noop(String) String
-
-/* The separator between msgctxt and msgid in a .mo file.  */
-#define GETTEXT_CONTEXT_GLUE "\004"
-
-/* Pseudo function calls, taking a MSGCTXT and a MSGID instead of just a
-   MSGID.  MSGCTXT and MSGID must be string literals.  MSGCTXT should be
-   short and rarely need to change.
-   The letter 'p' stands for 'particular' or 'special'.  */
-#ifdef DEFAULT_TEXT_DOMAIN
-# define pgettext(Msgctxt, Msgid) \
-   pgettext_aux (DEFAULT_TEXT_DOMAIN, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, LC_MESSAGES)
-#else
-# define pgettext(Msgctxt, Msgid) \
-   pgettext_aux (NULL, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, LC_MESSAGES)
-#endif
-#define dpgettext(Domainname, Msgctxt, Msgid) \
-  pgettext_aux (Domainname, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, LC_MESSAGES)
-#define dcpgettext(Domainname, Msgctxt, Msgid, Category) \
-  pgettext_aux (Domainname, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, Category)
-#ifdef DEFAULT_TEXT_DOMAIN
-# define npgettext(Msgctxt, Msgid, MsgidPlural, N) \
-   npgettext_aux (DEFAULT_TEXT_DOMAIN, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, MsgidPlural, N, LC_MESSAGES)
-#else
-# define npgettext(Msgctxt, Msgid, MsgidPlural, N) \
-   npgettext_aux (NULL, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, MsgidPlural, N, LC_MESSAGES)
-#endif
-#define dnpgettext(Domainname, Msgctxt, Msgid, MsgidPlural, N) \
-  npgettext_aux (Domainname, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, MsgidPlural, N, LC_MESSAGES)
-#define dcnpgettext(Domainname, Msgctxt, Msgid, MsgidPlural, N, Category) \
-  npgettext_aux (Domainname, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, MsgidPlural, N, Category)
-
-#ifdef __GNUC__
-__inline
-#else
-#ifdef __cplusplus
-inline
-#endif
-#endif
-static const char *
-pgettext_aux (const char *domain,
-              const char *msg_ctxt_id, const char *msgid,
-              int category)
-{
-  const char *translation = dcgettext (domain, msg_ctxt_id, category);
-  if (translation == msg_ctxt_id)
-    return msgid;
-  else
-    return translation;
-}
-
-#ifdef __GNUC__
-__inline
-#else
-#ifdef __cplusplus
-inline
-#endif
-#endif
-static const char *
-npgettext_aux (const char *domain,
-               const char *msg_ctxt_id, const char *msgid,
-               const char *msgid_plural, unsigned long int n,
-               int category)
-{
-  const char *translation =
-    dcngettext (domain, msg_ctxt_id, msgid_plural, n, category);
-  if (translation == msg_ctxt_id || translation == msgid_plural)
-    return (n == 1 ? msgid : msgid_plural);
-  else
-    return translation;
-}
-
-/* The same thing extended for non-constant arguments.  Here MSGCTXT and MSGID
-   can be arbitrary expressions.  But for string literals these macros are
-   less efficient than those above.  */
-
-#include <string.h>
-
-#define _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS \
-  (((__GNUC__ >= 3 || __GNUG__ >= 2) && !__STRICT_ANSI__) \
-   /* || __STDC_VERSION__ >= 199901L */ )
-
-#if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
-#include <stdlib.h>
-#endif
-
-#define pgettext_expr(Msgctxt, Msgid) \
-  dcpgettext_expr (NULL, Msgctxt, Msgid, LC_MESSAGES)
-#define dpgettext_expr(Domainname, Msgctxt, Msgid) \
-  dcpgettext_expr (Domainname, Msgctxt, Msgid, LC_MESSAGES)
-
-#ifdef __GNUC__
-__inline
-#else
-#ifdef __cplusplus
-inline
-#endif
-#endif
-static const char *
-dcpgettext_expr (const char *domain,
-                 const char *msgctxt, const char *msgid,
-                 int category)
-{
-  size_t msgctxt_len = strlen (msgctxt) + 1;
-  size_t msgid_len = strlen (msgid) + 1;
-  const char *translation;
-#if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
-  char msg_ctxt_id[msgctxt_len + msgid_len];
-#else
-  char buf[1024];
-  char *msg_ctxt_id =
-    (msgctxt_len + msgid_len <= sizeof (buf)
-     ? buf
-     : (char *) malloc (msgctxt_len + msgid_len));
-  if (msg_ctxt_id != NULL)
-#endif
-    {
-      memcpy (msg_ctxt_id, msgctxt, msgctxt_len - 1);
-      msg_ctxt_id[msgctxt_len - 1] = '\004';
-      memcpy (msg_ctxt_id + msgctxt_len, msgid, msgid_len);
-      translation = dcgettext (domain, msg_ctxt_id, category);
-#if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
-      if (msg_ctxt_id != buf)
-        free (msg_ctxt_id);
-#endif
-      if (translation != msg_ctxt_id)
-        return translation;
-    }
-  return msgid;
-}
-
-#define npgettext_expr(Msgctxt, Msgid, MsgidPlural, N) \
-  dcnpgettext_expr (NULL, Msgctxt, Msgid, MsgidPlural, N, LC_MESSAGES)
-#define dnpgettext_expr(Domainname, Msgctxt, Msgid, MsgidPlural, N) \
-  dcnpgettext_expr (Domainname, Msgctxt, Msgid, MsgidPlural, N, LC_MESSAGES)
-
-#ifdef __GNUC__
-__inline
-#else
-#ifdef __cplusplus
-inline
-#endif
-#endif
-static const char *
-dcnpgettext_expr (const char *domain,
-                  const char *msgctxt, const char *msgid,
-                  const char *msgid_plural, unsigned long int n,
-                  int category)
-{
-  size_t msgctxt_len = strlen (msgctxt) + 1;
-  size_t msgid_len = strlen (msgid) + 1;
-  const char *translation;
-#if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
-  char msg_ctxt_id[msgctxt_len + msgid_len];
-#else
-  char buf[1024];
-  char *msg_ctxt_id =
-    (msgctxt_len + msgid_len <= sizeof (buf)
-     ? buf
-     : (char *) malloc (msgctxt_len + msgid_len));
-  if (msg_ctxt_id != NULL)
-#endif
-    {
-      memcpy (msg_ctxt_id, msgctxt, msgctxt_len - 1);
-      msg_ctxt_id[msgctxt_len - 1] = '\004';
-      memcpy (msg_ctxt_id + msgctxt_len, msgid, msgid_len);
-      translation = dcngettext (domain, msg_ctxt_id, msgid_plural, n, category);
-#if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS
-      if (msg_ctxt_id != buf)
-        free (msg_ctxt_id);
-#endif
-      if (!(translation == msg_ctxt_id || translation == msgid_plural))
-        return translation;
-    }
-  return (n == 1 ? msgid : msgid_plural);
-}
-
-#endif /* _LIBGETTEXT_H */
diff --git a/vobcopy.c b/vobcopy.c
index 63aa21d..4847b01 100644
--- a/vobcopy.c
+++ b/vobcopy.c
@@ -2296,13 +2296,6 @@ char *safestrncpy(char *dest, const char *src, size_t n)
   return strncpy(dest, src, n-1);
 }
 
-#if defined(__APPLE__) && defined(__GNUC__) || defined(OpenBSD)
-int fdatasync( int value )
-{
-  return 0;
-}
-#endif
-
 
 /*
 * Check the time determine whether a new progress line should be output (once per second)
diff --git a/vobcopy.h b/vobcopy.h
index 76958e6..33cdf52 100644
--- a/vobcopy.h
+++ b/vobcopy.h
@@ -1,9 +1,5 @@
-#if defined( __gettext__ )
-#include <locale.h>
-#include <libintl.h>
-#define _(Text) gettext(Text)
-#else
-#define _(Text) Text
+#ifdef HAVE_CONFIG_H
+#include "config.h"
 #endif
 
 #define DVDCSS_VERBOSE 1
@@ -11,8 +7,18 @@
 #define MAX_STRING  81
 #define MAX_DIFFER  2000
 
-#ifdef HAVE_CONFIG_H
-#include "config.h"
+#ifdef ENABLE_NLS
+#define _(Text) gettext(Text)
+#else
+#define _(Text) Text
+#endif
+
+#ifdef HAVE_LOCALE_H
+#include <locale.h>
+#endif
+
+#ifdef HAVE_LIBINTL_H
+#include <libintl.h>
 #endif
 
 #include <features.h>
@@ -60,8 +66,7 @@
 #include <sys/param.h>
 #endif
 
-#if defined( __GNUC__ ) && \
-    !( defined( sun ) )
+#ifdef HAVE_GETOPT_H
 #include <getopt.h>
 #endif
 
@@ -73,10 +78,6 @@
 #include <stdlib.h>
 #endif
 
-#ifdef HAVE_SYS_STATVFS_H
-#include <sys/statvfs.h>
-#endif
-
 #ifdef HAVE_SYS_MOUNT_H
 #include <sys/mount.h>
 #endif
@@ -93,130 +94,54 @@ typedef enum  { FALSE=0, TRUE=1 }  bool;
 #define FALSE false
 #endif
 
-/* I'm trying to have all supported OSes definitions clearly separated here */
-/* The appearance could probably be made more readable -- lb                */
-
-/* ////////// Solaris ////////// */
-#if defined( __sun )
-
+#ifdef HAVE_SYS_MNTTAB_H
 #include <sys/mnttab.h>
-
-#else /* Solaris */
-
-/* //////////  *BSD //////////  */
-#if ( defined( BSD ) && ( BSD >= 199306 ) )
-
-#if !defined( __NetBSD__ ) && !defined(__GNU__) || \
-       ( defined( __NetBSD__) && ( __NetBSD_Version__ < 200040000 ) )
-#include <sys/mount.h>
-#define USE_STATFS 1
 #endif
 
-#if defined(__FreeBSD__)
-#define USE_STATFS_FOR_DEV
-#endif
-
-#ifdef HAVE_SYS_STATVFS_H
-#include <sys/statvfs.h>
+#ifdef HAVE_SYS_STATFS_H
+#include <sys/statfs.h>
 #endif
 
-#ifdef HAVE_SYS_PARAM_H
-#include <sys/param.h>
+#ifdef HAVE_SYS_VFS_H
+#include <sys/vfs.h>
+#define USE_STATFS
+/* #define USE_STATFS_FOR_DEV */
 #endif
 
-#  if defined(NetBSD) || defined (OpenBSD)
-
-#    if ( __NetBSD_Version__ < 200040000 )
-
-#include <sys/mount.h>
-#define USE_STATFS_FOR_DEV
-#define GETMNTINFO_USES_STATFS
-
-#    else
+#ifdef HAVE_SYS_STATVFS_H
 #include <sys/statvfs.h>
+#ifndef USE_STATFS
+#define USE_STATVFS
+#ifndef USE_STATFS_FOR_DEV
 #define USE_STATVFS_FOR_DEV
-#define GETMNTINFO_USES_STATVFS
-
-#    endif
 #endif
-
-#if defined(__FreeBSD__)
-#define USE_STATFS_FOR_DEV
-#include <sys/statvfs.h>
-#else
-#include <sys/vfs.h>
+#endif
 #endif
 
-#else /* *BSD */
-
-/* ////////// Darwin / OS X ////////// */
-#if defined ( __APPLE__ )
-
-/* ////////// Darwin ////////// */
-#  if defined( __GNUC__ )
-
-#include <sys/statvfs.h>
-/*can't be both! Should be STATVFS IMHO */
-/*#define USE_STATFS     1
-#define USE_STATVFS     1 */
-#define GETMNTINFO_USES_STATFS 1
-#define USE_GETMNTINFO 1
-
-#  endif
-
-/* ////////// OS X ////////// */
-#  if defined( __MACH__ )
-/* mac osx 10.5 does not seem to like this one here */
-/*#include <unistd.h>
-#include <sys/vfs.h>
-#include <sys/statvfs.h> */
-
-#  endif
-
-#else  /* Darwin / OS X */
-
-/* ////////// GNU/Linux ////////// */
-#if ( defined( __linux__ ) )
-
-#include <mntent.h>
-#include <sys/vfs.h>
-#include <sys/statfs.h>
-
-#define USE_STATFS       1
-#define HAVE_GETOPT_LONG 1
-
-#elif defined( __GLIBC__ )
-
+#ifdef HAVE_MNTENT_H
 #include <mntent.h>
-#include <sys/vfs.h>
-#include <sys/statvfs.h>
-
-#define HAVE_GETOPT_LONG 1
-
-#else
-
 #endif
+
+#ifdef HAVE_GETMNTINFO
+#define USE_GETMNTINFO
 #endif
+
+#ifdef USE_GETMNTINFO
+#ifdef USE_STATFS_FOR_DEV
+#define GETMNTINFO_USES_STATFS
 #endif
+#ifdef USE_STATVFS_FOR_DEV
+#define GETMNTINFO_USES_STATVFS
 #endif
-
-
-/* OS/2 */
-#if defined(__EMX__)
-#define __off64_t __int64_t
-#include <sys/vfs.h>
-#include <sys/statfs.h>
-#define USE_STATFS 1
 #endif
 
-
-
-
 #include <dvdread/dvd_reader.h>
 
 /*for/from play_title.c*/
+#ifdef HAVE_ASSERT_H
 #include <assert.h>
-/* #include "config.h" */
+#endif
+
 #include <dvdread/ifo_types.h>
 #include <dvdread/ifo_read.h>
 /* #include <dvdread/dvd_udf.h> */
@@ -242,6 +167,6 @@ char *safestrncpy(char *dest, const char *src, size_t n);
 int check_progress( void ); /* this can be removed because the one below supersedes it */
 int progressUpdate( int starttime, int cur, int tot, int force );
 
-#if defined(__APPLE__) && defined(__GNUC__)
-int fdatasync( int value );
+#ifndef HAVE_FDATASYNC
+#define fdatasync(fd) 0
 #endif
